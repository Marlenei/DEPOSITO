
@{
    ViewBag.Title = "SolicitudPedidos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb mb-4 mt-4">
    <li class="breadcrumb-item"><a href="index.html">Resumen</a></li>
    <li class="breadcrumb-item active">Tipos</li>
</ol>

<div class="card">
    <div class="card-header">
        <i class="fas fa-users me-1"></i> Solicitud de Pedidos
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-14">
                <button type="button" class="btn btn-success" onclick="abrirModal(null)"> Ingresar Pedido </button>
            </div>
        </div>

        <hr />

        <table id="tabla" class="display cell-border" style="width:100%">
            <thead>
                <tr>
                    <th></th>
                    <th>Producto</th>
                    <th>Cant. Pedida</th>
                    <th>Cant. Entregada</th>
                    <th>Fecha Pedido</th>
                    <th>Fecha Entrega</th>
                    <th>Usuario Solicitante</th>
                    <th>Fecha Actualizada</th>
                    <th>Área</th>
                    <th>Sector</th>
                    <th>Usuario Entrega</th>
                    <th>Observaciones</th>
                    <th>N° Pedido</th>
                    <th>Estado</th>
                    <th></th>

                </tr>
            </thead>
            <tbody style="text-align:center">
                <tr>
                    <td></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<!-------------------- MODAL CREATE ----------------------->
        <div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header bg-dark text-white">
                        <h1 class="modal-title fs-5" id="exampleModalLabel">Producto</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body g-2" >
                        <input id="txtid" type="hidden" value="" />

                        <div class="row g-4" id="contenedor">
                            <div class="col-sm-6">
                                <label class="form-label">Producto</label>
                                <select id="cbodetalle" class="form-select" required>
                                    <option value="0" disabled selected>Seleccionar</option>
                                </select>
                            </div>

                            <div class="col-sm-6">
                                <label class="form-label">Cantidad Pedida</label>
                                <input type="number" class="form-control" id="txtcantidades" required min="1">
                            </div>

                            <div class="col-sm-6">
                                <label class="form-label">Cantidad Entregada</label>
                                <input type="number" class="form-control" id="txtcantidad" min="0">
                            </div>

                            <div class="col-sm-6">
                                <label class="form-label">Fecha Pedido</label>
                                <input type="text" class="form-control" id="txtfechapedido" required readonly>
                            </div>

                            <div class="col-sm-6">
                                <label class="form-label">Fecha Entrega</label>
                                <input type="text" class="form-control" id="txtfechaentrega" readonly>
                            </div>

                            <div class="col-sm-6">
                                <label class="form-label">Área del Código</label>
                                <input type="number" class="form-control" id="txtcodigoarea" required>
                            </div>

                            <div class="col-sm-6">
                                <label class="form-label">Código Sector</label>
                                <input type="number" class="form-control" id="txtcodigosector" required>
                            </div>

                            <div class="col-sm-12">
                                <label class="form-label">Observaciones</label>
                                <textarea class="form-control" id="txtobservaciones" maxlength="250"></textarea>
                            </div>

                            <div class="col-sm-6">
                                <label class="form-label">Nro. Pedido</label>
                                <input type="text" class="form-control" id="txtpedido" maxlength="15">
                            </div>

                            <div class="col-sm-6">
                                <label class="form-label">Visado</label>
                                <input type="checkbox" id="chkCompletado" class="form-check-input">
                            </div>
                        </div>
                          </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                            <button type="button" class="btn btn-primary" onclick="Guardar()">Guardar</button>
                        </div>
                    </div>
                </div>
            </div>

@section scripts{
    <script>

           var tabladata;
            var filaSeleccionada;


       $(document).ready(function () {
            var tabladata = $("#tabla").DataTable({
                responsive: true,
                ordering: true,
                "ajax": {
                    url: '@Url.Action("ListarPedidos","Toner")',
                    type: "GET",
                    dataType: "json",
                    dataSrc: function (json) {
                        console.log("Formato de fechas recibidas:");
                        if (json.data && json.data.length > 0) {
                            console.log("FechaPedido:", json.data[0].FechaPedido);
                            console.log("FechaEntrega:", json.data[0].FechaEntrega);
                        }
                        return json.data;
                    }
                },
                columns: [
                    { "data": "IdSolicitud", "visible": false },
                    {
                        "data": "oProductos",
                        "render": function (data) {
                            return data.Detalle;
                        }
                    },
                    { "data": "CantidadPedida" },
                    { "data": "CantidadEntregada" },
                    {
                        "data": "FechaPedido", "render": function (data) {
                            var partes = data.split(' ')[0].split('/');
                            var dia = parseInt(partes[0], 10);
                            var mes = parseInt(partes[1], 10) - 1;
                            var año = parseInt(partes[2], 10);
                            var fecha = new Date(año, mes, dia);
                            return (fecha.getDate()) + '/' + (fecha.getMonth() + 1) + '/' + fecha.getFullYear();
                        },
                    },
                    {
                        "data": "FechaEntrega",
                        "render": function (data) {
                            if (!data) return "";
                            return data; // Ya viene formateada del servidor
                        }
                    },
                    { "data": "IdUsuarioPedido" },
                    {
                        "data": "FechaHoraActualización",
                        "render": function (data) {
                            return data ? data : 'No disponible'; // Valor predeterminado si está vacío
                        }
                    },
                    { "data": "CodigoArea" },
                    { "data": "CodigoSector" },
                    { "data": "IdUsuarioEntrega" },
                    { "data": "Observaciones" },
                    { "data": "NroPedido" },
                    {
                        "data": "Visado",
                        "render": function (data) {
                            return `<input type="checkbox" ${data ? 'checked' : ''} disabled />`;
                        }
                    },
                    {
                        "defaultContent": '<button type="button" class="btn btn-primary btn-sm btn-editar"> <i class="fas fa-pen"></i></button>',
                        "orderable": false,
                        "searchable": false,
                        "width": "90px"
                    }
                ],
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/2.1.8/i18n/es-ES.json'
                },
                });

                 $("#tabla tbody").on("click", '.btn-editar', function () {
                     var data = tabladata.row($(this).closest("tr")).data();
                     abrirModal(data);
                 });

            });
       






        @*function abrirModal(json) {
            $("#txtid").val(0);
            $("#cbodetalle").val("");
            $("#txtcantidades").val("");
            $("#txtcantidad").val("");
            $('#txtfechapedido').datepicker({
                minDate: "-30D",
                maxDate: 0,
            });
            $('#txtfechaentrega').datepicker({
                minDate: "-30D",
                maxDate: 0,
            });
            $("#txtcodigoarea").val("");
            $("#txtcodigosector").val("");
            $("#txtusuariopedido").val(@Session["AccesCode"]);
            $("#txtusuarioentrega").val(@Session["AccesCode"]);
            $("#txtobservaciones").val("");
            $("#txtpedido").val("");
            $("#chkCompletado").prop("checked", false);

            $("#mensajeError").hide();

            if (json != null) {
                var fechaActMatch = json.FechaAct.match(/\/Date\((\d+)\)\//);
                var timestamp = parseInt(fechaActMatch[1], 10);
                var fechaRegistro = new Date(timestamp);
                var fechaActual = new Date();
                var diferenciaDias = (fechaActual.getTime() - fechaRegistro.getTime()) / (1000 * 3600 * 24);

                if (diferenciaDias >= 1) {
                    alert("Ya no se puede actualizar/modificar este registro.");
                    return;
                }

                $("#txtid").val(json.IdSolicitud);
                $("#cbodetalle").val(json.oProductos.IdProducto);
                $("#txtcantidades").val(json.CantidadPedida);
                $("#txtcantidad").val(json.CantidadEntregada);
                $("#txtfechapedido").val(json.FechaPedido).prop("readonly", true);
                $("#txtfechaentrega").val(json.FechaEntrega).prop("readonly", true);
                $("#txtobservaciones").val(json.Observaciones);
                $("#txtusuariopedido").val(json.IdUsuarioPedido);
            }
            $("#FormModal").modal("show");
        }

        $("#tabla tbody").on("click", '.btn-editar', function () {
            filaSeleccionada = $(this).closest("tr");
            var data = tabladata.row(filaSeleccionada).data();
            abrirModal(data);
        });*@

               function Guardar() {
            // Validaciones
            if ($("#cbodetalle").val() == "0" || $("#cbodetalle").val() == null) {
                alert("Debe seleccionar un producto");
                return;
            }

            if ($("#txtcantidades").val() == "" || $("#txtcantidades").val() <= 0) {
                alert("Debe ingresar una cantidad válida");
                return;
            }

            var SolicitudPedidos = {
                IdSolicitud: $("#txtid").val() || 0,
                oProductos: {
                    IdProducto: $("#cbodetalle option:selected").val(),
                    Detalle: $("#cbodetalle option:selected").text(),
                },
                CantidadPedida: parseInt($("#txtcantidades").val()),
                CantidadEntregada: parseInt($("#txtcantidad").val()) || 0,
                FechaPedido: $("#txtfechapedido").val(),
                FechaEntrega: $("#txtfechaentrega").val(),
                IdUsuarioPedido: parseInt($("#txtusuariopedido").val()),
                CodigoArea: parseInt($("#txtcodigoarea").val()),
                CodigoSector: parseInt($("#txtcodigosector").val()),
                IdUsuarioEntrega: parseInt($("#txtusuarioentrega").val()),
                Observaciones: $("#txtobservaciones").val(),
                NroPedido: $("#txtpedido").val(),
                Visado: $("#chkCompletado").is(":checked"),
                UsuarioVisado: parseInt($("#txtusuarioentrega").val())
            };

            // También deberías asegurarte de que el combo de productos se inicialice correctamente
            jQuery.ajax({
                url: '@Url.Action("GuardarPedidos", "Toner")',
                type: "POST",
                data: JSON.stringify({ objeto: SolicitudPedidos }),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $(".modal-body").LoadingOverlay("hide");

                    if (data.resultado) {
                        if (typeof data.resultado === 'number' && data.resultado > 0) {
                            alert("El pedido se registró correctamente");
                            tabladata.ajax.reload();
                            $("#FormModal").modal("hide");
                        } else if (typeof data.resultado === 'boolean' && data.resultado) {
                            alert("El pedido se actualizó correctamente");
                            tabladata.ajax.reload();
                            $("#FormModal").modal("hide");
                        } else {
                            alert(data.mensaje || "No se pudo completar la operación");
                        }
                    } else {
                        alert(data.mensaje || "No se pudo completar la operación");
                    }
                },
                error: function (xhr, error, thrown) {
                    $(".modal-body").LoadingOverlay("hide");
                    console.error("Error en la solicitud:", error);
                    console.error("Detalles:", xhr);
                    alert("Se produjo un error al procesar la solicitud");
                },
                beforeSend: function () {
                    $(".modal-body").LoadingOverlay("show", {
                        imageResizeFactor: 2,
                        text: "Guardando...",
                        size: 14
                    });
                }
            });
        }

        // Además, modifica la función abrirModal para resetear correctamente el combo:
        function abrirModal(json) {
            $("#txtid").val(0);
            $("#cbodetalle").val("0"); // Asegúrate de que el valor por defecto sea "0"
            $("#txtcantidades").val("");
            $("#txtcantidad").val("");
            $('#txtfechapedido').datepicker({
                minDate: "-30D",
                maxDate: 0,
            });
            $('#txtfechaentrega').datepicker({
                minDate: "-30D",
                maxDate: 0,
            });
            $("#txtcodigoarea").val("");
            $("#txtcodigosector").val("");
            $("#txtusuariopedido").val(@Session["AccesCode"]);
            $("#txtusuarioentrega").val(@Session["AccesCode"]);
            $("#txtobservaciones").val("");
            $("#txtpedido").val("");
            $("#chkCompletado").prop("checked", false);

            if (json != null) {
                $("#txtid").val(json.IdSolicitud);
                $("#cbodetalle").val(json.oProductos.IdProducto);
                $("#txtcantidades").val(json.CantidadPedida);
                $("#txtcantidad").val(json.CantidadEntregada);
                $("#txtfechapedido").val(json.FechaPedido);
                $("#txtfechaentrega").val(json.FechaEntrega);
                $("#txtobservaciones").val(json.Observaciones);
                $("#txtusuariopedido").val(json.IdUsuarioPedido);
            }
            $("#FormModal").modal("show");
        }

        // Y asegúrate de que la carga inicial del combo se haga correctamente:
        jQuery.ajax({
            url: '@Url.Action("ListarProductos", "Toner")',
            type: "GET",
            data: null,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                $("#cbodetalle").empty(); // Limpia el combo primero
                $("<option>").attr({ "value": "0", "disabled": "true", "selected": "true" }).text("Seleccionar").appendTo("#cbodetalle");
                $.each(data.data, function (index, valor) {
                    if (valor.Activo === true) {
                        $("<option>").attr({ "value": valor.IdProducto }).text(valor.Detalle).appendTo("#cbodetalle");
                    }
                });
            },
            error: function (error) {
                console.log(error);
                alert("Error al cargar los productos");
            },
        });

            function checkCantidad() {
                const cantidadPedida = parseInt(document.getElementById('txtcantidades').value) || 0;
                const cantidadEntregada = parseInt(document.getElementById('txtcantidad').value) || 0;
                const chkCompletado = document.getElementById('chkCompletado');

                // Verifica si las cantidades son iguales y actualiza el estado del checkbox
                chkCompletado.checked = (cantidadPedida === cantidadEntregada);
            }






    </script>
}