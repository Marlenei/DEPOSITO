@using System.Web.Optimization
@{
    ViewBag.Title = "Solicitud de Pedidos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="card shadow-sm">
    <div class="card-header bg-primary text-white">
        <h5 class="card-title mb-0">
            <i class="fas fa-box-open me-2"></i>Solicitud de Pedidos
        </h5>
    </div>


    <div class="card-body">
        @if (User.Identity.IsAuthenticated)
        {
            <div class="alert alert-info mb-4">
                <div class="row align-items-center">
                    <div class="col-md-4 mb-2 mb-md-0">
                        <i class="fas fa-user me-2"></i><strong>@User.Identity.Name</strong>
                    </div>
                    <div class="col-md-4 mb-2 mb-md-0">
                        <span class="d-block text-success">@Session["NombreArea"]</span>
                        <small class="text-muted">Código: @Session["CodArea"]</small>
                    </div>
                    <div class="col-md-4">
                        <span class="d-block text-success">@Session["NombreSector"]</span>
                        <small class="text-muted">Código: @Session["CodSector"]</small>
                    </div>
                </div>
            </div>
        }

        <div class="d-grid gap-2 d-md-flex justify-content-md-end mb-4">
            <button type="button" class="btn btn-success" onclick="abrirModal(null)">
                <i class="fas fa-plus-circle me-1"></i> Nuevo Pedido
            </button>
        </div>

        <div class="row mb-4">
            <div class="col-md-6">
                <div class="input-group">
                    <input type="text" class="form-control"
                           id="txtBuscarPedido"
                           placeholder="Buscar por N° de Pedido">
                    <button class="btn btn-primary"
                            type="button"
                            onclick="buscarPorNumero()">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-6">
                <button class="btn btn-warning w-100"
                        onclick="mostrarPendientes()">
                    <i class="fas fa-clipboard-list me-2"></i>
                    Ver Pendientes de Mi Área
                </button>
            </div>
        </div>

        <div class="table-responsive">
            <table id="tabla" class="table table-striped-columns table-hover table-bordered" style="width: 100% !important; table-layout: fixed;">
                <thead class="table-dark">
                    <tr>
                        <th></th>
                        <th>Producto</th>
                        <th>Cant. Pedida</th>
                        <th>Cant. Entregada</th>
                        <th>Fecha Entrega</th>
                        <th>N° Pedido</th>
                        <th>Visado</th>
                        <th>Acciones</th>

                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-dark text-white">
                <h1 class="modal-title fs-5" id="titulodinamico">Producto</h1>
                <button type="button" class="btn-close bg-light" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input id="txtid" type="hidden" value="" />
                <input type="hidden" id="txtusuario" value="@Session["AccesCode"]" readonly>
                <div class="row">
                    <div class="col-1">
                        Usuario:
                    </div>
                    <div class="col-2">
                        <input type="text" class="form-control mb-3" id="txtusuario" value="@User.Identity.Name" readonly>
                    </div>

                    <div class="col-1">
                        <label for="txtpedido" class="form-label">N° de Pedido</label>
                    </div>
                    <div class="col-3">
                        <input type="text" class="form-control" id="txtpedido" maxlength="15" placeholder="Ingrese el número de pedido" required>
                    </div>

                    <div class="col-1">
                        <label for="txtfechapedido" class="form-label">Fecha de Pedido</label>
                    </div>
                    <div class="col-4">
                        <input type="text" class="form-control" id="txtfechapedido" readonly>
                    </div>
                </div>


                <div class="row">
                    <div class="col-2">
                        <label class="form-label" style="text-align: right;">Áre:</label>
                    </div>
                    <div class="col-4">
                        <input type="text" class="form-control" id="txtArea" value="@Session["NombreArea"]" readonly>
                    </div>

                    <div class="col-2">
                        <label class="form-label" style="text-align: right;">Sector:</label>
                    </div>
                    <div class="col-4">
                        <input type="text" class="form-control" id="txtSector" value="@Session["NombreSector"]" readonly>
                    </div>
                </div>

                <div class="row g-3">


                    <div class="col-12 mb-3">
                        <div class="border rounded p-3 bg-light">
                            <label class="form-label fw-bold d-block mb-2">Buscar Producto (Opcional)</label>
                            @Html.Partial("_BusquedaAvan")
                        </div>
                    </div>


                    <div class="col-md-6">
                        <label class="form-label" style="text-align:center;">Producto </label>
                        <select id="cbodetalle" class="form-select ProductosS" style="width: 100%">
                        </select>
                        <p style="text-align: center; margin-top:5px">Informacion del producto</p>
                        <div class="input-group mb-5">
                            <span class="input-group-text">Stock Actual</span>
                            <input id="cbostockactual" type="text" class="form-control" readonly>
                            <span class="input-group-text">Codigo ID</span>
                            <input id="infocodigoid" type="text" class="form-control" readonly>
                        </div>

                        <div class="input-group mb-5">
                            <span class="input-group-text">Rubro</span>
                            <input id="inforubro" type="text" class="form-control" readonly>
                            <span class="input-group-text">Tipo</span>
                            <input id="infotipo" type="text" class="form-control" readonly>
                        </div>
                        <button type="button" id="btnAgregar" class="btn btn-primary">AGREGAR</button>
                    </div>

                    <div class="col-12 col-md-6">
                        <label for="txtcantidad" class="form-label">Cantidad</label>
                        <input type="number" class="form-control" id="txtcantidad" min="0" required placeholder="Coloque una cantidad">
                    </div>

                    <div class="col-12 col-md-6">
                        <label for="txtcodigoid" class="form-label">Código ID</label>
                        <input type="text" class="form-control" id="txtcodigoid" maxlength="30" placeholder="Ingrese el código ID">
                    </div>

                    <div class="col-12 col-md-6">
                        <label for="txtobservaciones" class="form-label">Observaciones</label>
                        <input type="text" class="form-control" id="txtobservaciones" maxlength="50" placeholder="Ingrese observaciones">
                    </div>
                </div>

                <div class="row mt-2">
                    <div class="col-12">
                        <div id="mensajeError" class="alert alert-danger d-none" role="alert"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary btn-guardar" id="btnGuardar">Guardar</button>
                <button class="btn btn-secondary" onclick="imprimirPedido()" id="btnImprimir" disabled>
                    <i class="fas fa-print me-2"></i> Imprimir
                </button>
            </div>
        </div>
    </div>
</div>


@section scripts{

    <script>
        // Configuración Inicial
        var tabladata;
        var filaSeleccionada;
        /*var productos = {};*/
        var codigoidprod = {};
        var stockprod = {};
        var rubroprod = {};
        var tipoprod = {};
        var appSettings = {};
        var permisos = @Html.Raw(Json.Encode(Session["PermissionsCode"]));

        let productoSeleccionado = null;
        var productosAgregados = [];



        $(document).ready(function () {
            //inicializarDataTable();

             var urlrubros = '@Url.Action("ListarRubros", "Toner")'
             CargarRubros(urlrubros, permisos.map(p => p.Accesos));

             var urlcodigoid = '@Url.Action("ListarProductos", "Toner")'
            CargarCodigosID(urlcodigoid, permisos.map(p => p.Accesos));
            LimpiarSelects();
            CargarProductos(permisos.map(p => p.Accesos));
            LimpiarCampos();
            selects2();
            cargarApiUrls();
            $('.btn-guardar').click(Guardar);
            editar();
            $('#btnAgregar').click(function () {
                agregarProducto();
            });
        });




        $('#StockDatos').on('input', function () {
            var inputVal = $(this).val();
            var selectedOption = $('#cbodetalle option').filter(function () {
                return $(this).text() === inputVal;
            });
            var stockActual = stockprod[idProducto];

            if (selectedOption.length) {

                if (stockActual !== undefined) {  // <- Faltaba 'undefined'
                    $("#cbostockactual").val(stockActual).show();
                } else {
                    $("#cbostockactual").val("").hide();
                }
                $("#txtidProducto").val(idProducto);
            }
        });





            function agregarProducto() {
                var idProducto = $("#cbodetalle").val();
                var productoTexto = $("#cbodetalle option:selected").text(); // Nuevo
                var cantidad = parseInt($("#txtcantidad").val());
                var observaciones = $("#txtobservaciones").val();

                if (!idProducto || cantidad <= 0) {
                    mostrarError("¡Seleccione un producto y asegúrese de que la cantidad sea mayor que 0!");
                    return;
                }

                productosAgregados.push({
                    IdProducto: idProducto,
                    Detalle: productoTexto,  // Nuevo campo
                    Cantidad: cantidad,
                    Observaciones: observaciones
                });

                LimpiarCampos();
                mostrarProductosAgregados();
            }

            function mostrarProductosAgregados() {
                var tablaProductos = $("#tablaProductos tbody");
                tablaProductos.empty(); // Limpiar la tabla antes de mostrar

                productosAgregados.forEach(function (producto, index) {
                    tablaProductos.append(`
            <tr>
                <td>${producto.IdProducto}</td>
                <td>${producto.Cantidad}</td>
                <td>${producto.Observaciones}</td>
                <td><button class="btn btn-danger" onclick="eliminarProducto(${index})">Eliminar</button></td>
            </tr>
        `);
                });
            }
            function LimpiarCampos() {
                $("#txtcantidad").val(1);  // Valor por defecto
                $("#txtobservaciones").val("");
                $("#cbodetalle").val(null).trigger('change');
                $("#cbostockactual").val("");
                $("#infocodigoid").val("");
                $("#inforubro").val("");
                $("#infotipo").val("");
            }

            function eliminarProducto(index) {
                productosAgregados.splice(index, 1); // Eliminar el producto de la lista
                mostrarProductosAgregados(); // Actualizar la tabla
            }

                  function editar() {
                $("#tabla tbody").on("click", '.btn-editar', function () {
                    var filaSeleccionada = $(this).closest("tr");
                    var data = tabladata.row(filaSeleccionada).data();
                    abrirModal(data);
                });
            }
            function selects2() {
                $('#cbodetalle').select2({
                    placeholder: "Seleccione un producto",
                    allowClear: true,
                    dropdownParent: $('#FormModal') // Importante para modales
                });
            }

        function LimpiarSelects() {

            $('#cbodetalle,#cbocodigo,#cborubro,#cbotipo ').val(null).trigger('change');

            CargarProductos(permisos.map(p => p.Accesos));
        }


        // Información del producto
        $('#StockDatos').on('input', function () {
            var inputVal = $(this).val();
            var selectedOption = $('#cbodetalle option').filter(function () {
                return $(this).text() === inputVal;
            });

            if (selectedOption.length) {
                var idProducto = selectedOption.data('id');

                var stockActual = stockprod[idProducto];
                if (stockActual !== undefined) {
                    $("#cbostockactual").val(stockActual).show();
                } else {
                    $("#cbostockactual").val("").hide();
                }

                var codigoid = codigoidprod[idProducto];
                if (codigoid !== undefined) {
                    $("#infocodigoid").val(codigoid).show();
                } else {
                    $("#infocodigoid").val("").hide();
                }

                var rubro = rubroprod[idProducto];
                if (rubro !== undefined) {
                    $("#inforubro").val(rubro).trigger('change').show();
                } else {
                    $("#inforubro").val("").hide();
                }

                var tipo = tipoprod[idProducto];
                if (tipo !== undefined) {
                    $("#infotipo").val(tipo).trigger('change').show();
                } else {
                    $("#infotipo").val("").hide();
                }
                $("#txtidProducto").val(idProducto);
            }
        });

          function CargarProductos(permisos) {
          $.ajax({
              url: '@Url.Action("ListarProductos", "Toner")',
              type: "GET",
              data: null,
              dataType: "json",
              contentType: "application/json; charset=utf-8",
              success: function (data) {
                  $("#cbodetalle").empty();
                  $("<option>").attr({ "value": "" }).text("Seleccionar").appendTo("#cbodetalle");
                  var opciones = [];
                  var tienePermiso24 = permisos.includes(24);
                  var tienePermiso184 = permisos.includes(184);
                  $.each(data.data, function (index, valor) {

                      if (valor.Activo === true) {
                          if (tienePermiso24 && valor.oRubros.Rubro !== "Insumos Informaticos") {
                              opciones.push({
                                  id: valor.IdProducto,
                                  text: valor.Detalle
                              });
                              stockprod[valor.IdProducto] = valor.StockActual;
                              codigoidprod[valor.IdProducto] = valor.CodigoId;
                              rubroprod[valor.IdProducto] = valor.oRubros.Rubro;
                              tipoprod[valor.IdProducto] = valor.oTipos.Tipo;
                          } else if (tienePermiso184 && valor.oRubros.Rubro === "Insumos Informaticos") {
                              opciones.push({
                                  id: valor.IdProducto,
                                  text: valor.Detalle
                              });
                              stockprod[valor.IdProducto] = valor.StockActual;
                              codigoidprod[valor.IdProducto] = valor.CodigoId;
                              rubroprod[valor.IdProducto] = valor.oRubros.Rubro;
                              tipoprod[valor.IdProducto] = valor.oTipos.Tipo;
                          }
                      }



                  });
                  $('#cbodetalle').select2({
                      placeholder: "Selecciona una opción",
                      data: opciones,
                      allowClear: true,
                      dropdownParent: $('#FormModal'),
                  }).val(null).trigger('change');

                  //$.each(data.data, function (index, valor) {

                  //if (valor.Activo === true) {
                  //    stockprod[valor.IdProducto] = valor.StockActual;
                  //    codigoidprod[valor.IdProducto] = valor.CodigoId;
                  //    rubroprod[valor.IdProducto] = valor.oRubros.Rubro;
                  //    tipoprod[valor.IdProducto] = valor.oTipos.Tipo;
                  //    $("<option>").attr({ "value": valor.IdProducto }).text(valor.Detalle).appendTo("#cbodetalle");
                  //    }
                  //});
              },
              error: function (error) {
                  console.log(error)
              },
          });
      }

        function modalTitle(title) {
            document.getElementById('titulodinamico').innerText = title;
        }



             async function abrirModal(data) {
                    try {
                        // Extraer los accesos del usuario
                        const accesos = permisos.map(p => p.Accesos);

                        // Esperar a que se carguen los productos antes de continuar
                        await CargarProductos(accesos);

                        // Configuración inicial de campos
                        $('#txtArea').val('@Session["NombreArea"]');
                        $('#txtSector').val('@Session["NombreSector"]');
                        $("#txtid").val(0);
                        $("#txtcantidad").val("");
                        $("#txtobservaciones").val("");
                        $("#txtusuario").val('@Session["AccesCode"]');
                        $("#mensajeError").hide();

                        // Resetear campos dinámicos
                        $("#cbodetalle").val("").prop("disabled", false);
                        $("#txtfechapedido").prop("disabled", false);

                        // Configurar fecha actual
                        const fechaActual = new Date();
                        $("#txtfechapedido").val($.datepicker.formatDate('dd/mm/yy', fechaActual));

                        // Manejo del número de pedido (común para ambos modos)
                        if (data) {
                            // Modo Edición: Mostrar número existente
                            $("#txtpedido").val(data.NroPedido);
                        } else {
                            // Modo Creación: Generar nuevo número
                            const response = await $.ajax({
                                url: '@Url.Action("GenerarNumeroPedido", "SolicitudPedidos")'
                            });
                            $("#txtpedido").val(response);
                        }
                        // Siempre hacer el campo de solo lectura
                        $("#txtpedido").prop("readonly", true);

                        // Manejo específico de edición
                        if (data) {
                            modalTitle('Editar');
                            $("#txtid").val(data.IdSolicitud);
                            $("#txtcantidad").val(data.CantidadPedida);
                            $("#txtobservaciones").val(data.Observaciones);

                            // Configurar producto seleccionado
                            $("#cbodetalle")
                                .val(data.oProductos.IdProducto)
                                .prop("disabled", true)
                                .trigger('change');

                            // Configurar fecha del pedido
                            const fechaPedido = new Date(data.FechaPedido);
                            if (!isNaN(fechaPedido.getTime())) {
                                $("#txtfechapedido").val($.datepicker.formatDate('dd/mm/yy', fechaPedido));
                            }
                            $("#txtfechapedido").prop("disabled", true);

                            // Configurar botones
                            if (data.NroPedido && data.NroPedido !== "0") {
                                $("#btnGuardar").text("Actualizar");
                                $("#exampleModalLabel").text("Modificar Pedido");
                                $("#btnImprimir").prop("disabled", false);
                            }
                        } else {
                            // Configuración específica de creación
                            modalTitle('Crear nuevo');
                            $("#btnGuardar").text("Guardar");
                            $("#txtid").val(0);
                            $("#txtcantidad").val(1);
                            // Resetear otros campos según necesidad
                            $("#cbostockactual").val("");
                            $("#infocodigoid").val("");
                            $("#inforubro").val("");
                            $("#infotipo").val("");
                            $("#cbostockactual").val("");
                            // ... (otros reseteos que necesites)
                        }

                        $("#FormModal").modal("show");

                    } catch (error) {
                        console.error("Error en abrirModal:", error);
                        // Manejo de errores para el usuario
                }
                $("#cbodetalle").change(function () {
                    var idProducto = $(this).val();

                    var stockActual = obtenerStockPorId(idProducto);
                    if (stockActual !== undefined) {
                        $("#cbostockactual").val(stockActual);
                        $("#cbostockactual").show();
                    }

                    var codigoid = obtenerCodigoPorId(idProducto);
                    if (codigoid !== undefined) {
                        $("#infocodigoid").val(codigoid);
                        $("#infocodigoid").show();
                    }

                    var rubro = obtenerRubroPorId(idProducto);
                    if (rubro !== undefined) {
                        $("#inforubro").val(rubro);
                        $("#inforubro").show();
                    }

                    var tipo = obtenerTipoPorId(idProducto);
                    if (tipo !== undefined) {
                        $("#infotipo").val(tipo);
                        $("#infotipo").show();
                    }
                });

                function obtenerStockPorId(idProducto) {
                    return stockprod[idProducto];
                }
                function obtenerCodigoPorId(idProducto) {
                    return codigoidprod[idProducto];
                }
                function obtenerRubroPorId(idProducto) {
                    return rubroprod[idProducto];
                }
                function obtenerTipoPorId(idProducto) {
                    return tipoprod[idProducto];
                }
                }


        function mostrarError(mensaje) {
            $("#mensajeError").text(mensaje).show().delay(5000).fadeOut();
        }

            @*function inicializarDataTable() {
                tabladata = $('#tabla').DataTable({

                    ajax: {
                        url: '@Url.Action("Listar", "SolicitudPedidos")',
                        dataSrc: 'data'
                    },
                    columns: [
                        { data: "IdSolicitud", visible: false },
                        { data: "NroPedido", title: "N° Pedido" },  // Mover a primera posición
                        {
                            data: "Productos",
                            title: "Productos",
                            render: function (data) {
                                return data.map(p => p.Detalle).join(', ');
                            }
                        },
                        { data: "CantidadPedida", title: "Cant. Pedida" },
                        {
                            data: "CantidadEntregada",
                            title: "Cant. Entregada",
                            render: function (data) {
                                return data || '0';
                            }
                        },
                        {
                            data: "FechaPedido",
                            title: "Fecha Pedido",
                            render: function (data) {
                                // Tu formato de fecha en C# es "yyyy-MM-dd HH:mm:ss" que new Date() puede parsear.
                                // toLocaleDateString() lo mostrará en formato local.
                                return data ? new Date(data).toLocaleDateString() : '';
                            }
                        },
                        {
                            data: "FechaEntrega",
                            title: "Fecha Entrega",
                            render: function(data) {
                                return data ? new Date(data).toLocaleDateString() : 'Pendiente';
                            }
                        },
                      
                        {
                            data: "Visado",
                            title: "Visado",
                            render: function(data) {
                                return data ? '<i class="fas fa-check-circle text-success"></i>' :
                                             '<i class="fas fa-times-circle text-danger"></i>';
                            }
                        },
                        {
                            data: null,
                            render: function(data, type, row) {
                                if (!row.Visado && row.CantidadEntregada > 0) {
                                    return `<button class="btn btn-sm btn-warning btn-visar"
                                            data-id="${row.IdSolicitud}">Visar</button>`;
                                }
                                return '';
                            }
                        },
                        {
                            "data": null,
                            "render": function (data, type, row) {
                                return '<button type="button" class="btn btn-primary btn-sm ms-2 btn-editar"> <i class="fas fa-edit"></i></button>';
                            },
                            "orderable": false,
                            "searchable": false,
                            "width": "90px"
                        }
                    ],
                    language: {
                        url: 'https://cdn.datatables.net/plug-ins/2.1.8/i18n/es-ES.json'
                    },

                    responsive: true, // Para adaptar a pantallas pequeñas
                    processing: true, // Muestra indicador de carga
                    serverSide: false
                });*@





            $('#tabla tbody').on('click', '.btn-visar', function() {
                const id = $(this).data('id');

                Swal.fire({
                    title: '¿Confirmar visado?',
                    text: "Esta acción no se puede deshacer",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.post('@Url.Action("RegistrarVisado", "SolicitudPedidos")', { idPedido: id })
                        .done(function(response) {
                            Swal.fire(response.mensaje);
                            tabladata.ajax.reload();
                        });
                    }
                });
            });
                    

         function buscarPorNumero() {
                const nroPedido = $("#txtBuscarPedido").val().trim(); // Obtener valor del input
                tabladata.ajax.url('@Url.Action("ListarFiltradosNro", "SolicitudPedidos")' +
                    '?nroPedido=' + encodeURIComponent(nroPedido) +
                    '&soloPendientes=false').load(function(data) {
                        if (data.data.length === 0) {
                            Swal.fire('¡Atención!', 'No se encontraron pedidos con ese número.', 'info');
                        }
                    });
            }

       function mostrarPendientes() {
            const codArea = '@Session["CodArea"]'; // Obtén el código del área del usuario desde la sesión
            tabladata.ajax.url('@Url.Action("ListarPendientesPorArea", "SolicitudPedidos")' +
                '?codArea=' + encodeURIComponent(codArea)).load();
        }







                   function Guardar() {
                // Validaciones
                if (productosAgregados.length === 0) {
                    mostrarError("¡No hay productos para guardar!");
                    return;
                }

                const pedidoData = {
                    IdSolicitud: $("#txtid").val(),
                    Productos: productosAgregados, // Enviar la lista de productos
                    NroPedido: $("#txtpedido").val(),
                    IdUsuarioPedido: $("#txtusuario").val(),
                    FechaPedido: $("#txtfechapedido").val()
                };

                const url = pedidoData.IdSolicitud == 0
                    ? '@Url.Action("GuardarPedidos", "SolicitudPedidos")'
                    : '@Url.Action("Actualizar", "SolicitudPedidos")';

                $.ajax({
                    url: url,
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ objeto: pedidoData }),
                    success: function(response) {
                        if (response.resultado) {
                            Swal.fire('¡Éxito!', response.mensaje, 'success');
                            $("#FormModal").modal("hide");
                            tabladata.ajax.reload(null, false);
                            productosAgregados = []; // Limpiar la lista después de guardar
                        } else {
                            mostrarError(response.mensaje);
                        }
                    },
                    error: function(xhr) {
                        mostrarError("Error al guardar: " + xhr.responseText);
                    }
                });
            }




        $("#txtfechapedido").datepicker({
            dateFormat: 'dd/mm/yy',
            minDate: -7,
            maxDate: +7
        });

        function imprimirPedido() {
            const pedido = {
                nroPedido: $("#txtpedido").val(),
                fechaPedido: $("#txtfechapedido").val(),
                usuario: $("#txtusuario").val(),
                area: $("#txtArea").val(),
                sector: $("#txtSector").val(),
                productos: productosAgregados ,
                cantidad: $("#txtcantidad").val(),
                observaciones: $("#txtobservaciones").val()
            };

            const contenido = `
                <style>
                    .comprobante {
                        font-family: Arial, sans-serif;
                        max-width: 800px;
                        margin: 20px auto;
                        padding: 20px;
                        border: 1px solid #ddd;
                    }
                    .header {
                        display: flex;
                        justify-content: space-between;
                        margin-bottom: 20px;
                    }
                    .logo {
                        max-width: 2cm;
                        max-height: 2cm;
                    }
                    .titulo {
                        text-align: center;
                        margin: 20px 0;
                    }
                    .datos-usuario {
                        margin-bottom: 30px;
                    }
                    table {
                        width: 100%;
                        border-collapse: collapse;
                        margin: 20px 0;
                    }
                    th, td {
                        border: 1px solid #000;
                        padding: 8px;
                        text-align: left;
                    }
                    .firmas {
                        display: flex;
                        justify-content: space-between;
                        margin-top: 50px;
                    }
                    .firma {
                        width: 45%;
                        border-top: 1px solid #000;
                        padding-top: 10px;
                        margin-top: 60px;
                    }
                    .pie {
                        margin-top: 30px;
                        text-align: center;
                    }
                    media print {
                        body { visibility: hidden; }
                        .comprobante { visibility: visible; }
                    }
                </style>

                <div class="comprobante">
                    <div class="header">
                        <div>
                            <h2>Nota de pedido de insumos generales</h2>
                            <p>Fecha: ${pedido.fechaPedido}</p>
                            <p>N° de Pedido: ${pedido.nroPedido}</p>
                        </div>
                        <img src="Content/images/04.png" class="logo" alt="Logo">
                    </div>

                    <div class="datos-usuario">
                        <p>Solicitante: ${pedido.usuario}</p>
                        <p>Área: ${pedido.area}</p>
                        <p>Sector: ${pedido.sector}</p>
                    </div>

                    <table>
                        <thead>
                            <tr>
                                <th>Descripción</th>
                                <th>Cantidad Solicitada</th>
                                <th>Cantidad Entregada</th>
                            </tr>
                        </thead>
                        <tbody>
                              ${pedido.productos.map(p => `
                    <tr>
                        <td>${p.Detalle}</td>
                        <td>${p.Cantidad}</td>
                        <td style="height: 30px;">&nbsp;</td>
                    </tr>
                `).join('')}
                        </tbody>
                    </table>

                    <div class="firmas">
                        <div class="firma">
                            Firma del Solicitante<br>
                            ${pedido.usuario}
                        </div>
                        <div class="firma">
                            Firma de Recepción<br>
                            (Nombre y apellido)
                        </div>
                    </div>

                    <div class="pie">
                        <p>Fecha de impresión: ${new Date().toLocaleDateString()}</p>
                        <p>N° de Pedido: ${pedido.nroPedido}</p>
                    </div>
                </div>
            `;

            const ventanaImpresa = window.open('', '_blank');
            ventanaImpresa.document.write(contenido);
            ventanaImpresa.document.close();
            ventanaImpresa.print();
        }
    </script>
}