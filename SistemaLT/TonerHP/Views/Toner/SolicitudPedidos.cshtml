@using System.Web.Optimization
@{
    ViewBag.Title = "Solicitud de Pedidos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="card shadow-sm">
    <div class="card-header bg-primary text-white">
        <h5 class="card-title mb-0">
            <i class="fas fa-box-open me-2"></i>Solicitud de Pedidos
        </h5>
    </div>


    <div class="card-body">
        @if (User.Identity.IsAuthenticated)
        {
            <div class="alert alert-info mb-4">
                <div class="row align-items-center">
                    <div class="col-md-4 mb-2 mb-md-0">
                        <i class="fas fa-user me-2"></i><strong>@User.Identity.Name</strong>
                    </div>
                    <div class="col-md-4 mb-2 mb-md-0">
                        <span class="d-block text-success">@Session["NombreArea"]</span>
                        <small class="text-muted">Código: @Session["CodArea"]</small>
                    </div>
                    <div class="col-md-4">
                        <span class="d-block text-success">@Session["NombreSector"]</span>
                        <small class="text-muted">Código: @Session["CodSector"]</small>
                    </div>
                </div>
            </div>
        }

        <div class="d-grid gap-2 d-md-flex justify-content-md-end mb-4">
            <button type="button" class="btn btn-success" onclick="abrirModal(null)">
                <i class="fas fa-plus-circle me-1"></i> Nuevo Pedido
            </button>
        </div>

        <div class="row mb-4">
            <div class="col-md-6">
                <div class="input-group">
                    <input type="text" class="form-control"
                           id="txtBuscarPedido"
                           placeholder="Buscar por N° de Pedido">
                    <button class="btn btn-primary"
                            type="button"
                            onclick="buscarPorNumero()">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-6">
                <button class="btn btn-warning w-100"
                        onclick="mostrarPendientes()">
                    <i class="fas fa-clipboard-list me-2"></i>
                    Ver Pedidos Realizados Por Mi
                </button>
            </div>
        </div>

        <!-- NUEVA SECCIÓN PARA EL TÍTULO -->
        <div class="row mb-3">
            <!- mb-3 para un pequeño margen inferior antes de la tabla -->
            <div class="col-12 text-center">
                <h4 id="tituloTablaPedidos" class="text-primary">PEDIDOS DE MI ÁREA</h4> <!-- O el texto que prefieras -->
            </div>
        </div>
        <!-- FIN DE LA NUEVA SECCIÓN PARA EL TÍTULO -->

        <div class="table-responsive">
            <table id="tabla" class="table table-striped-columns table-hover table-bordered" style="width: 100% !important; table-layout: fixed;">
                <thead class="table-dark">
                    <tr>
                        <th></th>
                        <th>Producto</th>
                        <th>Cant. Pedida</th>
                        <th>Cant. Entregada</th>
                        <th>Fecha Entrega</th>
                        <th>N° Pedido</th>
                        <th>Visado</th>
                        <th>Acciones</th>

                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <!-- SIN modal-dialog-scrollable -->
        <div class="modal-content">
            <div class="modal-header bg-dark text-white py-2">
                <h1 class="modal-title fs-5" id="titulodinamico">Detalles del Pedido</h1>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body py-3">
                <input id="txtid" type="hidden" value="0" />
                <input type="hidden" id="txtusuarioId" value="@Session["AccesCode"]" readonly>

                <!-- SECCIÓN 1: Información General del Pedido y Usuario -->
                <fieldset class="mb-3 border p-2">
                    <legend class="w-auto px-2" style="font-size: 0.9rem; font-weight: 600;">Información General</legend>
                    <div class="row g-2">
                        <div class="col-md-3">
                            <label class="form-label-sm">Usuario:</label>
                            <input type="text" class="form-control form-control-sm" id="txtusuarioNombre" value="@User.Identity.Name" readonly>
                        </div>
                        <div class="col-md-3">
                            <label for="txtpedido" class="form-label-sm">N° de Pedido:</label>
                            <input type="text" class="form-control form-control-sm" id="txtpedido" placeholder="Autogenerado" readonly>
                        </div>
                        <div class="col-md-3">
                            <label for="txtfechapedido" class="form-label-sm">Fecha Pedido:</label>
                            <input type="text" class="form-control form-control-sm" id="txtfechapedido" readonly>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label-sm">Área:</label>
                            <input type="text" class="form-control form-control-sm" id="txtArea" value="@Session["NombreArea"]" readonly>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label-sm">Sector:</label>
                            <input type="text" class="form-control form-control-sm" id="txtSector" value="@Session["NombreSector"]" readonly>
                        </div>
                    </div>
                </fieldset>

                <!-- SECCIÓN 2: Agregar Productos y Lista -->
                <div class="row g-3">
                    <!-- Columna Izquierda: Selección y Detalles del Producto a Agregar -->
                    <div class="col-lg-5">
                        <fieldset class="border p-2 h-100">
                            <legend class="w-auto px-2" style="font-size: 0.9rem; font-weight: 600;">Agregar Producto</legend>

                            <div class="mb-2">
                                <label class="form-label-sm fw-bold d-block">Buscar Producto (Opcional)</label>
                                <div class="border rounded p-2 bg-light">
                                    @Html.Partial("_BusquedaAvan")
                                </div>
                            </div>

                            <div class="mb-2">
                                <label for="cbodetalle" class="form-label-sm">Producto:</label>
                                <select id="cbodetalle" class="form-select form-select-sm ProductosS" style="width: 100%"></select>
                            </div>

                            <div class="row g-2 mb-2">
                                <div class="col-6">
                                    <label for="txtcantidad" class="form-label-sm">Cantidad:</label>
                                    <input type="number" class="form-control form-control-sm" id="txtcantidad" min="1" value="1" required>
                                </div>
                                @*<div class="col-6">
                                    <label class="form-label-sm">Stock Actual:</label>
                                    <input id="cbostockactual" type="text" class="form-control form-control-sm" readonly>
                                </div>*@
                            </div>

                            <div class="mb-2">
                                <label for="txtobservaciones" class="form-label-sm">Observaciones (Producto):</label>
                                <input type="text" class="form-control form-control-sm" id="txtobservaciones" maxlength="50" placeholder="Opcional">
                            </div>

                            <p class="mb-1 mt-2 text-muted" style="font-size:0.8em;">Info. adicional del producto seleccionado:</p>
                            <div class="row g-2 mb-2">
                                <div class="col-sm-4">
                                    <label class="form-label-sm">Código ID:</label>
                                    <input id="infocodigoid" type="text" class="form-control form-control-sm" readonly>
                                </div>
                                <div class="col-sm-4">
                                    <label class="form-label-sm">Rubro:</label>
                                    <input id="inforubro" type="text" class="form-control form-control-sm" readonly>
                                </div>
                                <div class="col-sm-4">
                                    <label class="form-label-sm">Tipo:</label>
                                    <input id="infotipo" type="text" class="form-control form-control-sm" readonly>
                                </div>
                            </div>

                            <button type="button" id="btnAgregar" class="btn btn-primary btn-sm w-100">
                                <i class="fas fa-plus-circle me-1"></i> AGREGAR PRODUCTO
                            </button>
                        </fieldset>
                    </div>

                    <!-- Columna Derecha: Lista de Productos Agregados -->
                    <div class="col-lg-7">
                        <fieldset class="border p-2 h-100">
                            <legend class="w-auto px-2" style="font-size: 0.9rem; font-weight: 600;">Productos en este Pedido</legend>
                            <span id="contadorProductos" class="form-text d-block mb-1">Productos agregados: 0</span>

                            <div id="seccionProductos" class="mt-1">
                                <!-- No se aplica max-height ni overflow -->
                                <table class="table table-bordered table-sm" id="tablaProductos">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Producto</th>
                                            <th style="width: 15%;">Cant.</th>
                                            <th>Observ.</th>
                                            <th style="width: 20%;">Acción</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- Filas dinámicas aquí -->
                                    </tbody>
                                </table>
                            </div>
                            <div id="mensajeVacioProductos" class="alert alert-secondary alert-sm mt-2 py-1" role="alert" style="display: block;">
                                Aún no se han agregado productos.
                            </div>
                        </fieldset>
                    </div>
                </div>

                <!-- Mensaje de Error General -->
                <div class="row mt-2">
                    <div class="col-12">
                        <div id="mensajeError" class="alert alert-danger alert-sm d-none py-1" role="alert"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer py-2">
                <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary btn-sm btn-guardar" id="btnGuardar">
                    <i class="fas fa-save me-1"></i> Guardar Pedido
                </button>
                <button class="btn btn-info btn-sm" onclick="imprimirPedido()" id="btnImprimir" disabled>
                    <i class="fas fa-print me-2"></i> Imprimir
                </button>
            </div>
        </div>
    </div>
</div>
<style>

    /* --- Estilos para Modal Compacto --- */

    /* Si la clase form-label-sm de Bootstrap no es suficiente o no existe */
    #FormModal .form-label,
    #FormModal .form-label-sm { /* Asegurar que se aplique si usas la clase */
        font-size: 0.875em;
        margin-bottom: 0.2rem; /* Reducir margen inferior de etiquetas */
    }

    #FormModal fieldset {
        min-width: 0; /* Necesario para fieldsets en flex/grid para evitar desbordamientos */
    }

    /* Ajustes para Select2 si usas controles -sm */
    #FormModal .select2-container .select2-selection--single {
        height: calc(1.5em + 0.5rem + 2px) !important; /* Altura de form-control-sm */
        padding: 0.25rem 0.5rem !important; /* Padding de form-control-sm */
        font-size: .875rem !important; /* font-size de form-control-sm */
        line-height: 1.5 !important;
    }

        #FormModal .select2-container .select2-selection--single .select2-selection__rendered {
            line-height: calc(1.5em + 0.5rem - (0.25rem * 2)) !important; /* Ajustar línea de texto */
            padding-left: 0 !important; /* Select2 suele añadir su propio padding */
        }

    #FormModal .select2-container--default .select2-selection--single .select2-selection__arrow {
        height: calc(1.5em + 0.5rem) !important; /* Ajustar flecha */
        top: 1px !important;
    }

    /* Para que el dropdown de Select2 se vea sobre el modal */
    .select2-dropdown {
        z-index: 1061 !important; /* Bootstrap modal z-index es 1050/1055, backdrop 1060 si es static */
    }
</style>

@section scripts{

    <script>
        // Configuración Inicial
        var tabladata;
        var filaSeleccionada;
        /*var productos = {};*/
        var codigoidprod = {};
        var stockprod = {};
        var rubroprod = {};
        var tipoprod = {};
        var appSettings = {};
        var permisos = @Html.Raw(Json.Encode(Session["PermissionsCode"]));

        let productoSeleccionado = null;
        var productosAgregados = [];



        $(document).ready(function () {
            inicializarDataTable();

             var urlrubros = '@Url.Action("ListarRubros", "Toner")'
             CargarRubros(urlrubros, permisos.map(p => p.Accesos));

             var urlcodigoid = '@Url.Action("ListarProductos", "Toner")'
            CargarCodigosID(urlcodigoid, permisos.map(p => p.Accesos));
            LimpiarSelects();
            CargarProductos(permisos.map(p => p.Accesos));
            LimpiarCampos();
            selects2();
            cargarApiUrls();
            $('#btnGuardar').click(Guardar);
            editar();
            $('#btnAgregar').click(function () {
                agregarProducto();
            });

        });




        $('#StockDatos').on('input', function () {
            var inputVal = $(this).val();
            var selectedOption = $('#cbodetalle option').filter(function () {
                return $(this).text() === inputVal;
            });
            var stockActual = stockprod[idProducto];

            if (selectedOption.length) {

                if (stockActual !== undefined) {  // <- Faltaba 'undefined'
                    $("#cbostockactual").val(stockActual).show();
                } else {
                    $("#cbostockactual").val("").hide();
                }
                $("#txtidProducto").val(idProducto);
            }
        });





        function agregarProducto() {
            var idProducto = $("#cbodetalle").val();
            var productoTexto = $("#cbodetalle option:selected").text();
            var cantidad = parseInt($("#txtcantidad").val());
            var observaciones = $("#txtobservaciones").val();

            if (!idProducto || cantidad <= 0) {
                mostrarError("¡Seleccione un producto y asegúrese de que la cantidad sea mayor que 0!");
                return;
            }

            productosAgregados.push({
                IdSolicitud: 0,
                oProductos: {
                    IdProducto: idProducto,
                    Detalle: productoTexto
                },
                CantidadPedida: cantidad,
                CantidadEntregada: 0,
                FechaPedido: $("#txtfechapedido").val(),
                FechaEntrega: null,
                IdUsuarioPedido: $("#txtusuario").val(),
                CodigoArea: $("#txtArea").val(),
                CodigoSector: $("#txtSector").val(),
                IdUsuarioEntrega: null,
                Observaciones: observaciones,
                NroPedido: $("#txtpedido").val(),
                Visado: false,
                NombreArea: $("#txtArea").val(),
                NombreSector: $("#txtSector").val()
            });

            LimpiarCampos();
            mostrarProductosAgregados();
        }


        function mostrarProductosAgregados() {
            var tabla = $("#tablaProductos tbody");
            tabla.empty();

            let colorToggle = false;

            productosAgregados.forEach((producto, index) => {
                const fila = $("<tr>")
                    .addClass(colorToggle ? "table-primary" : "") // Quité table-light para alternar con el default
                    .attr("data-producto-id", producto.oProductos.IdProducto);

                const btnEliminar = $("<button>")
                    .addClass("btn btn-danger btn-sm")
                    .html('<i class="fas fa-trash"></i> Eliminar') // Texto para claridad
                    .on("click", () => eliminarProducto(index));

                fila.append(
                    $("<td>").text(producto.oProductos.Detalle),
                    $("<td>").text(producto.CantidadPedida),
                    $("<td>").text(producto.Observaciones || "-"),
                    $("<td>").append(btnEliminar)
                );

                tabla.append(fila);
                colorToggle = !colorToggle;
            });

            $("#contadorProductos").text(`Productos agregados: ${productosAgregados.length}`);

            if (productosAgregados.length > 0) {
                $("#seccionProductos").show();
                $("#mensajeVacioProductos").hide(); // Ocultar mensaje de vacío
            } else {
                $("#seccionProductos").hide();
                $("#mensajeVacioProductos").show(); // Mostrar mensaje de vacío
            }
        }


        function eliminarProducto(index) {
            if (confirm("¿Eliminar este producto del pedido?")) {
                productosAgregados.splice(index, 1);
                mostrarProductosAgregados(); // Actualizar vista


            }
        }



                  function editar() {
                $("#tabla tbody").on("click", '.btn-editar', function () {
                    var filaSeleccionada = $(this).closest("tr");
                    var data = tabladata.row(filaSeleccionada).data();
                    abrirModal(data);
                });
            }
            function selects2() {
                $('#cbodetalle').select2({
                    placeholder: "Seleccione un producto",
                    allowClear: true,
                    dropdownParent: $('#FormModal') // Importante para modales
                });
            }

        function LimpiarSelects() {

            $('#cbodetalle,#cbocodigo,#cborubro,#cbotipo ').val(null).trigger('change');

            CargarProductos(permisos.map(p => p.Accesos));
        }

        function LimpiarCampos() { // Para limpiar campos de producto individual
            $("#txtcantidad").val(1);
            $("#txtobservaciones").val("");
            $("#cbodetalle").val(null).trigger('change'); // Esto ya debería limpiar los campos de info
            // No es necesario limpiar cbostockactual, infocodigoid, etc. aquí si se actualizan con el change de cbodetalle
        }
        // Información del producto
        $('#StockDatos').on('input', function () {
            var inputVal = $(this).val();
            var selectedOption = $('#cbodetalle option').filter(function () {
                return $(this).text() === inputVal;
            });

            if (selectedOption.length) {
                var idProducto = selectedOption.data('id');

                var stockActual = stockprod[idProducto];
                if (stockActual !== undefined) {
                    $("#cbostockactual").val(stockActual).show();
                } else {
                    $("#cbostockactual").val("").hide();
                }

                var codigoid = codigoidprod[idProducto];
                if (codigoid !== undefined) {
                    $("#infocodigoid").val(codigoid).show();
                } else {
                    $("#infocodigoid").val("").hide();
                }

                var rubro = rubroprod[idProducto];
                if (rubro !== undefined) {
                    $("#inforubro").val(rubro).trigger('change').show();
                } else {
                    $("#inforubro").val("").hide();
                }

                var tipo = tipoprod[idProducto];
                if (tipo !== undefined) {
                    $("#infotipo").val(tipo).trigger('change').show();
                } else {
                    $("#infotipo").val("").hide();
                }
                $("#txtidProducto").val(idProducto);
            }
        });

         function CargarProductos(permisos) {
          $.ajax({
              url: '@Url.Action("ListarProductos", "Toner")',
              type: "GET",
              data: null,
              dataType: "json",
              contentType: "application/json; charset=utf-8",
              success: function (data) {
                  $("#cbodetalle").empty();
                  $("<option>").attr({ "value": "" }).text("Seleccionar").appendTo("#cbodetalle");
                  var opciones = [];
                  var tienePermiso24 = permisos.includes(24);
                  var tienePermiso184 = permisos.includes(184);
                  $.each(data.data, function (index, valor) {

                      if (valor.Activo === true) {
                          if (tienePermiso24 && valor.oRubros.Rubro !== "Insumos Informaticos") {
                              opciones.push({
                                  id: valor.IdProducto,
                                  text: valor.Detalle
                              });
                              stockprod[valor.IdProducto] = valor.StockActual;
                              codigoidprod[valor.IdProducto] = valor.CodigoId;
                              rubroprod[valor.IdProducto] = valor.oRubros.Rubro;
                              tipoprod[valor.IdProducto] = valor.oTipos.Tipo;
                          } else if (tienePermiso184 && valor.oRubros.Rubro === "Insumos Informaticos") {
                              opciones.push({
                                  id: valor.IdProducto,
                                  text: valor.Detalle
                              });
                              stockprod[valor.IdProducto] = valor.StockActual;
                              codigoidprod[valor.IdProducto] = valor.CodigoId;
                              rubroprod[valor.IdProducto] = valor.oRubros.Rubro;
                              tipoprod[valor.IdProducto] = valor.oTipos.Tipo;
                          }
                      }



                  });
                  $('#cbodetalle').select2({
                      placeholder: "Selecciona una opción",
                      data: opciones,
                      allowClear: true,
                      dropdownParent: $('#FormModal'),
                  }).val(null).trigger('change');

                  //$.each(data.data, function (index, valor) {

                  //if (valor.Activo === true) {
                  //    stockprod[valor.IdProducto] = valor.StockActual;
                  //    codigoidprod[valor.IdProducto] = valor.CodigoId;
                  //    rubroprod[valor.IdProducto] = valor.oRubros.Rubro;
                  //    tipoprod[valor.IdProducto] = valor.oTipos.Tipo;
                  //    $("<option>").attr({ "value": valor.IdProducto }).text(valor.Detalle).appendTo("#cbodetalle");
                  //    }
                  //});
              },
              error: function (error) {
                  console.log(error)
              },
          });
      }

        function modalTitle(title) {
            document.getElementById('titulodinamico').innerText = title;
        }



            async function abrirModal(data) {
    try {
        // Extraer los accesos del usuario
        const accesos = permisos.map(p => p.Accesos);

        // Esperar a que se carguen los productos antes de continuar
        await CargarProductos(accesos);
        productosAgregados = []; // Resetear productos
        mostrarProductosAgregados();
        // Configuración inicial de campos
        $('#txtArea').val('@Session["NombreArea"]');
        $('#txtSector').val('@Session["NombreSector"]');
        $("#txtid").val(0);
        $("#txtcantidad").val("");
        $("#txtobservaciones").val("");
        $("#txtusuario").val('@Session["AccesCode"]');
        $("#mensajeError").hide();

        // Resetear campos dinámicos
        $("#cbodetalle").val("").prop("disabled", false);
        $("#txtfechapedido").prop("disabled", false);

        // Configurar fecha actual en el formato correcto
        const fechaActual = new Date();
        $("#txtfechapedido").val($.datepicker.formatDate('yy-mm-dd', fechaActual));
        console.log("Fecha de pedido:", $("#txtfechapedido").val());

        // Siempre hacer el campo de solo lectura
        $("#txtpedido").prop("readonly", true);

        // Manejo específico de edición
        if (data) {
            modalTitle('Editar');

            $("#txtid").val(data.IdSolicitud);
            $("#txtcantidad").val(data.CantidadPedida);
            $("#txtobservaciones").val(data.Observaciones);

            // Configurar producto seleccionado
            $("#cbodetalle")
                .val(data.oProductos.IdProducto)
                .prop("disabled", true)
                .trigger('change');

            // Configurar fecha del pedido
            const fechaPedido = new Date(data.FechaPedido);
            if (!isNaN(fechaPedido.getTime())) {
                $("#txtfechapedido").val($.datepicker.formatDate('dd/mm/yy', fechaPedido));
            }
            $("#txtfechapedido").prop("disabled", true);

            // Configurar botones
            if (data.NroPedido && data.NroPedido !== "0") {
                $("#btnGuardar").text("Actualizar");
                $("#exampleModalLabel").text("Modificar Pedido");
                $("#btnImprimir").prop("disabled", false);
            }
        } else {
            // Configuración específica de creación
            modalTitle('Crear nuevo');

            $("#btnGuardar").text("Guardar");
            $("#txtid").val(0);
            $("#txtcantidad").val(1);
            // Resetear otros campos según necesidad
            $("#cbostockactual").val("");
            $("#infocodigoid").val("");
            $("#inforubro").val("");
            $("#infotipo").val("");
            $("#cbostockactual").val("");
            productosAgregados = []; // Limpiar la lista de productos
            mostrarProductosAgregados(); // Actualizar la tabla (debería mostrarla vacía y el mensaje)
            LimpiarCampos();
        }

        $("#FormModal").modal("show");

    } catch (error) {
        console.error("Error en abrirModal:", error);
    }
}

        $("#cbodetalle").change(function () {
            var idProducto = $(this).val();

            var stockActual = obtenerStockPorId(idProducto);
            if (stockActual !== undefined) {
                $("#cbostockactual ").val(stockActual);
                $("#cbostockactual").show();
            }

            var codigoid = obtenerCodigoPorId(idProducto);
            if (codigoid !== undefined) {
                $("#infocodigoid").val(codigoid);
                $("#infocodigoid").show();
            }

            var rubro = obtenerRubroPorId(idProducto);
            if (rubro !== undefined) {
                $("#inforubro").val(rubro);
                $("#inforubro").show();
            }

            var tipo = obtenerTipoPorId(idProducto);
            if (tipo !== undefined) {
                $("#infotipo").val(tipo);
                $("#infotipo").show();
            }
        });

        function obtenerStockPorId(idProducto) {
            return stockprod[idProducto];
        }
        function obtenerCodigoPorId(idProducto) {
            return codigoidprod[idProducto];
        }
        function obtenerRubroPorId(idProducto) {
            return rubroprod[idProducto];
        }
        function obtenerTipoPorId(idProducto) {
            return tipoprod[idProducto];
        }

        function mostrarError(mensaje) {
            $("#mensajeError").text(mensaje).show().delay(5000).fadeOut();
        }

                   function inicializarDataTable() {
                tabladata = $('#tabla').DataTable({
                    ajax: {
                        url: '@Url.Action("ListarPendientesPorArea", "SolicitudPedidos")',
                        dataSrc: 'data'
                    },
                    columns: [
                        { data: "IdSolicitud", visible: false },
                        { data: "NroPedido", title: "N° Pedido" }, // Mover a primera posición
                        { data: "oProductos.Detalle", title: "Producto" },
                        { data: "CantidadPedida", title: "Cant. Pedida" },
                        {
                            data: "CantidadEntregada",
                            title: "Cant. Entregada",
                            render: function (data) {
                                return data || '0';
                            }
                        },
                        {
                            data: "FechaPedido",
                            title: "Fecha Pedido",
                            render: function (data) {
                                return data ? new Date(data).toLocaleDateString() : '';
                            }
                        },
                        {
                            data: "FechaEntrega",
                            title: "Fecha Entrega",
                            render: function (data) {
                                return data ? new Date(data).toLocaleDateString() : 'Pendiente';
                            }
                        },
                        {
                            data: "Visado",
                            title: "Visado",
                            render: function (data) {
                                return data ? '<i class="fas fa-check-circle text-success"></i>' :
                                    '<i class="fas fa-times-circle text-danger"></i>';
                            }
                        },
                        {
                            data: null,
                            render: function (data, type, row) {
                                if (!row.Visado && row.CantidadEntregada > 0) {
                                    return `<button class="btn btn-sm btn-warning btn-visar"
                                 data-id="${row.IdSolicitud}">Visar</button>`;
                                }
                                return '';
                            }
                        },


                        {
                            "data": null,
                            "render": function (data, type, row) {
                                return '<button type="button" class="btn btn-primary btn-sm ms-2 btn-editar"> <i class="fas fa-edit"></i></button>';
                            },

                            "orderable": false,
                            "searchable": false,
                            "width": "90px"
                        }
                    ],

                    order: [
                        [5, 'desc'], // Ordena por la 6ª columna (índice 5, "Fecha Pedido") en orden descendente
                        [0, 'desc']  // Opcional: Luego por la 1ª columna (índice 0, "IdSolicitud") descendente
                        // Ajusta el índice de la columna 'IdSolicitud' si no es la primera visible/invisible.
                        // Si IdSolicitud está visible y es la primera, sería [0, 'desc']
                        // Si está invisible como en tu ejemplo, y quieres usarla, asegúrate que esté en `columns`.
                    ],

                    language: {
                        url: 'https://cdn.datatables.net/plug-ins/2.1.8/i18n/es-ES.json'
                    },
                    responsive: true, // Para adaptar a pantallas pequeñas
                    processing: true, // Muestra indicador de carga
                    serverSide: false
                });

                  $('#tabla tbody').on('click', '.btn-visar', function() {
                  const id = $(this).data('id');

                  Swal.fire({
                      title: '¿Confirmar visado?',
                      text: "Esta acción no se puede deshacer",
                      icon: 'warning',
                      showCancelButton: true,
                      confirmButtonColor: '#3085d6',
                      cancelButtonColor: '#d33'
                  }).then((result) => {
                      if (result.isConfirmed) {
                          $.post('@Url.Action("RegistrarVisado", "SolicitudPedidos")', { idPedido: id })
                          .done(function(response) {
                              Swal.fire(response.mensaje);
                              tabladata.ajax.reload();
                          });
                      }
                  });
              });

            }






         function buscarPorNumero() {
                const nroPedido = $("#txtBuscarPedido").val().trim(); // Obtener valor del input
                tabladata.ajax.url('@Url.Action("ListarFiltradosNro", "SolicitudPedidos")' +
                    '?nroPedido=' + encodeURIComponent(nroPedido) +
                    '&soloPendientes=false').load(function(data) {
                        if (data.data.length === 0) {
                            Swal.fire('¡Atención!', 'No se encontraron pedidos con ese número.', 'info');
                        }
                    });
            }

function mostrarPendientes() {
    if (typeof tabladata !== 'undefined' && tabladata !== null) {
        // 1. Establece la URL
        tabladata.ajax.url('@Url.Action("Listar", "SolicitudPedidos")');

        // 2. Recarga los datos
        tabladata.ajax.reload(null, false);
    } else {
        console.error("La instancia de DataTable 'tabladata' no está definida o es nula.");
    }
}




 function Guardar() {
    if (productosAgregados.length === 0) {
        mostrarError("¡Agregue al menos un producto!");
        return;
    }

    const solicitud = {
        IdSolicitud: $("#txtid").val(),
        NroPedido: $("#txtpedido").val(),
        FechaPedido: $("#txtfechapedido").val(),
        IdUsuarioPedido: $("#txtusuario").val(),
        CodigoArea: $("#txtArea").val(),
        CodigoSector: $("#txtSector").val()
    };

    const listaProductos = productosAgregados.map(producto => ({
        IdSolicitud: solicitud.IdSolicitud,
        oProductos: {
            IdProducto: producto.oProductos.IdProducto,
            Detalle: producto.oProductos.Detalle
        },
        CantidadPedida: producto.CantidadPedida,
        Observaciones: producto.Observaciones
    }));

    const url = solicitud.IdSolicitud === "0"
        ? '@Url.Action("GuardarPedidos", "SolicitudPedidos")'
        : '@Url.Action("Actualizar", "SolicitudPedidos")';

    $.ajax({
        url: url,
        type: "POST",
        data: JSON.stringify({
            objeto: solicitud,
            listaProductos: listaProductos
        }),
        contentType: "application/json",
        success: function (response) {
            if (response.resultado) {
                $("#txtpedido").val(response.nroPedido);
                Swal.fire("¡Éxito!", response.mensaje, "success");
                $("#FormModal").modal("hide");
                tabladata.ajax.reload();
                productosAgregados = [];
            } else {
                mostrarError(response.mensaje);
            }
        },
        error: function (xhr, status, error) {
            mostrarError("Error en la solicitud: " + error);
        }
    });
}







        $("#txtfechapedido").datepicker({
            dateFormat: 'yy-mm-dd',
            minDate: -7,
            maxDate: +7
        });

        function imprimirPedido() {
            const pedido = {
                nroPedido: $("#txtpedido").val(),
                fechaPedido: $("#txtfechapedido").val(),
                usuario: $("#txtusuario").val(),
                area: $("#txtArea").val(),
                sector: $("#txtSector").val(),
                productos: productosAgregados ,
                cantidad: $("#txtcantidad").val(),
                observaciones: $("#txtobservaciones").val()
            };

            const contenido = `
                <style>
                    .comprobante {
                        font-family: Arial, sans-serif;
                        max-width: 800px;
                        margin: 20px auto;
                        padding: 20px;
                        border: 1px solid #ddd;
                    }
                    .header {
                        display: flex;
                        justify-content: space-between;
                        margin-bottom: 20px;
                    }
                    .logo {
                        max-width: 2cm;
                        max-height: 2cm;
                    }
                    .titulo {
                        text-align: center;
                        margin: 20px 0;
                    }
                    .datos-usuario {
                        margin-bottom: 30px;
                    }
                    table {
                        width: 100%;
                        border-collapse: collapse;
                        margin: 20px 0;
                    }
                    th, td {
                        border: 1px solid #000;
                        padding: 8px;
                        text-align: left;
                    }
                    .firmas {
                        display: flex;
                        justify-content: space-between;
                        margin-top: 50px;
                    }
                    .firma {
                        width: 45%;
                        border-top: 1px solid #000;
                        padding-top: 10px;
                        margin-top: 60px;
                    }
                    .pie {
                        margin-top: 30px;
                        text-align: center;
                    }
                    media print {
                        body { visibility: hidden; }
                        .comprobante { visibility: visible; }
                    }
                </style>

                <div class="comprobante">
                    <div class="header">
                        <div>
                            <h2>Nota de pedido de insumos generales</h2>
                            <p>Fecha: ${pedido.fechaPedido}</p>
                            <p>N° de Pedido: ${pedido.nroPedido}</p>
                        </div>
                        <img src="Content/images/04.png" class="logo" alt="Logo">
                    </div>

                    <div class="datos-usuario">
                        <p>Solicitante: ${pedido.usuario}</p>
                        <p>Área: ${pedido.area}</p>
                        <p>Sector: ${pedido.sector}</p>
                    </div>

                    <table>
                        <thead>
                            <tr>
                                <th>Descripción</th>
                                <th>Cantidad Solicitada</th>
                                <th>Cantidad Entregada</th>
                            </tr>
                        </thead>
                        <tbody>
                              ${pedido.productos.map(p => `
                    <tr>
                        <td>${p.Detalle}</td>
                        <td>${p.Cantidad}</td>
                        <td style="height: 30px;">&nbsp;</td>
                    </tr>
                `).join('')}
                        </tbody>
                    </table>

                    <div class="firmas">
                        <div class="firma">
                            Firma del Solicitante<br>
                            ${pedido.usuario}
                        </div>
                        <div class="firma">
                            Firma de Recepción<br>
                            (Nombre y apellido)
                        </div>
                    </div>

                    <div class="pie">
                        <p>Fecha de impresión: ${new Date().toLocaleDateString()}</p>
                        <p>N° de Pedido: ${pedido.nroPedido}</p>
                    </div>
                </div>
            `;

            const ventanaImpresa = window.open('', '_blank');
            ventanaImpresa.document.write(contenido);
            ventanaImpresa.document.close();
            ventanaImpresa.print();
        }
    </script>
}